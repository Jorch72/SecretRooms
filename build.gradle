buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = "https://plugins.gradle.org/m2/" }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.4.0"
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: "com.matthewprenger.cursegradle"

version = '6.0.5'
group = 'com.wynprice.secretrooms' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'secretrooms'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'snapshot', version: '20190719-1.14.3'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
     accessTransformer = file('src/main/resources/META-INF/secretroomsmod_at.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                secretroomsmod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                secretroomsmod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'secretroomsmod', '--all', '--output', file('src/generated/resources/')

            mods {
                secretroomsmod {
                    source sourceSets.main
                }
            }
        }
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title": "Secret Rooms Mod",
                "Specification-Vendor": "Wyn Price",
                "Specification-Version": "1",
                "Implementation-Title": project.name,
                "Implementation-Version": "$version",
                "Implementation-Vendor": "Wyn Price",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.14.4-28.1.22'
}


task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

task devJar(type: Jar) {
    classifier = "dev"
    from sourceSets.main.output
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = "javadoc"
    from javadoc.getDestinationDir()
}

curseforge {
    apiKey = project.hasProperty("curseforge_api_key") ? curseforge_api_key : "###"//In the ~/.gradle/gradle.properties file
    project {
        id = '59652'
        releaseType = 'release'
        mainArtifact jar
        addArtifact sourcesJar
        addArtifact devJar
        addArtifact javadocJar
    }
}

artifacts {
    archives sourcesJar
    archives devJar
    archives javadocJar
}

//Add the generated the the source, to have the generated data be used
sourceSets.main.resources.srcDir 'src/generated/resources'